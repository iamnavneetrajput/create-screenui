{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/navneet/Desktop/layout/src/components/ui/button.tsx"],"sourcesContent":["import React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\n// Loading spinner component\nconst LoadingSpinner = ({ className = \"\" }: { className?: string }) => (\n  <svg\n    className={`animate-spin ${className}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n  >\n    <circle\n      className=\"opacity-25\"\n      cx=\"12\"\n      cy=\"12\"\n      r=\"10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"4\"\n    />\n    <path\n      className=\"opacity-75\"\n      fill=\"currentColor\"\n      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n    />\n  </svg>\n);\n\n// Button variants using class-variance-authority\nconst buttonVariants = cva(\n  // Base styles\n  \"inline-flex items-center justify-center gap-2 rounded-md font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 active:scale-[0.98] select-none\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-900 text-white shadow hover:bg-gray-800 focus-visible:ring-gray-950\",\n        secondary: \"bg-gray-100 text-gray-900 shadow-sm hover:bg-gray-200 focus-visible:ring-gray-500\",\n        outline: \"border border-gray-300 bg-transparent text-gray-900 shadow-sm hover:bg-gray-50 hover:border-gray-400 focus-visible:ring-gray-500\",\n        ghost: \"text-gray-900 hover:bg-gray-100 focus-visible:ring-gray-500\",\n        destructive: \"bg-red-500 text-white shadow hover:bg-red-600 focus-visible:ring-red-500\",\n        link: \"text-gray-900 underline-offset-4 hover:underline focus-visible:ring-gray-500 shadow-none\"\n      },\n      size: {\n        sm: \"h-8 px-3 text-sm\",\n        md: \"h-10 px-4 text-sm\",\n        lg: \"h-12 px-6 text-base\",\n        icon: \"h-10 w-10\"\n      },\n      fullWidth: {\n        true: \"w-full\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\"\n    }\n  }\n);\n\n// TypeScript interface for Button props\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>, VariantProps<typeof buttonVariants> {\n  icon?: React.ReactNode;\n  loading?: boolean;\n  as?: 'button' | 'a';\n  href?: string;\n  fullWidth?: boolean;\n  disabled?: boolean;\n}\n\ninterface AnchorProps extends React.AnchorHTMLAttributes<HTMLAnchorElement>, VariantProps<typeof buttonVariants> {\n  icon?: React.ReactNode;\n  loading?: boolean;\n  as: 'a';\n  href: string;\n  fullWidth?: boolean;\n  disabled?: boolean;\n}\n\n// Union type for component props\ntype ButtonComponentProps = ButtonProps | AnchorProps;\n\n// Button component with forwardRef\nconst Button = React.forwardRef<HTMLButtonElement | HTMLAnchorElement, ButtonComponentProps>(\n  ({ \n    className, \n    variant, \n    size, \n    fullWidth,\n    icon, \n    loading = false, \n    children, \n    as = 'button',\n    disabled,\n    ...props \n  }, ref) => {\n    // Determine if button should be disabled\n    const isDisabled = loading || disabled;\n    \n    // Common content for both button and anchor\n    const content = (\n      <>\n        {loading && (\n          <LoadingSpinner className={`${size === 'sm' ? 'h-3 w-3' : size === 'lg' ? 'h-5 w-5' : 'h-4 w-4'}`} />\n        )}\n        {!loading && icon && (\n          <span className={`${size === 'sm' ? 'text-sm' : size === 'lg' ? 'text-base' : 'text-sm'}`}>\n            {icon}\n          </span>\n        )}\n        {children && (\n          <span className={size === 'icon' ? 'sr-only' : ''}>\n            {children}\n          </span>\n        )}\n      </>\n    );\n\n    // Render as anchor tag\n    if (as === 'a') {\n      const anchorProps = props as AnchorProps;\n      return (\n        <a\n          ref={ref as React.ForwardedRef<HTMLAnchorElement>}\n          className={buttonVariants({ variant, size, fullWidth, className })}\n          {...anchorProps}\n          aria-disabled={isDisabled}\n          tabIndex={isDisabled ? -1 : undefined}\n          style={{\n            pointerEvents: isDisabled ? 'none' : 'auto',\n            opacity: isDisabled ? 0.5 : 1,\n            ...anchorProps.style\n          }}\n        >\n          {content}\n        </a>\n      );\n    }\n\n    // Render as button tag (default)\n    const buttonProps = props as ButtonProps;\n    return (\n      <button\n        ref={ref as React.ForwardedRef<HTMLButtonElement>}\n        className={buttonVariants({ variant, size, fullWidth, className })}\n        disabled={isDisabled}\n        {...buttonProps}\n      >\n        {content}\n      </button>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\nexport type { ButtonProps, AnchorProps };"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,4BAA4B;AAC5B,MAAM,iBAAiB,CAAC,EAAE,YAAY,EAAE,EAA0B,iBAChE,6LAAC;QACC,WAAW,CAAC,aAAa,EAAE,WAAW;QACtC,OAAM;QACN,MAAK;QACL,SAAQ;;0BAER,6LAAC;gBACC,WAAU;gBACV,IAAG;gBACH,IAAG;gBACH,GAAE;gBACF,QAAO;gBACP,aAAY;;;;;;0BAEd,6LAAC;gBACC,WAAU;gBACV,MAAK;gBACL,GAAE;;;;;;;;;;;;KAlBF;AAuBN,iDAAiD;AACjD,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,cAAc;AACd,iQACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,SAAS;YACT,OAAO;YACP,aAAa;YACb,MAAM;QACR;QACA,MAAM;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;QACA,WAAW;YACT,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAyBF,mCAAmC;AACnC,MAAM,uBAAS,6JAAA,CAAA,UAAK,CAAC,UAAU,OAC7B,CAAC,EACC,SAAS,EACT,OAAO,EACP,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,KAAK,EACf,QAAQ,EACR,KAAK,QAAQ,EACb,QAAQ,EACR,GAAG,OACJ,EAAE;IACD,yCAAyC;IACzC,MAAM,aAAa,WAAW;IAE9B,4CAA4C;IAC5C,MAAM,wBACJ;;YACG,yBACC,6LAAC;gBAAe,WAAW,GAAG,SAAS,OAAO,YAAY,SAAS,OAAO,YAAY,WAAW;;;;;;YAElG,CAAC,WAAW,sBACX,6LAAC;gBAAK,WAAW,GAAG,SAAS,OAAO,YAAY,SAAS,OAAO,cAAc,WAAW;0BACtF;;;;;;YAGJ,0BACC,6LAAC;gBAAK,WAAW,SAAS,SAAS,YAAY;0BAC5C;;;;;;;;IAMT,uBAAuB;IACvB,IAAI,OAAO,KAAK;QACd,MAAM,cAAc;QACpB,qBACE,6LAAC;YACC,KAAK;YACL,WAAW,eAAe;gBAAE;gBAAS;gBAAM;gBAAW;YAAU;YAC/D,GAAG,WAAW;YACf,iBAAe;YACf,UAAU,aAAa,CAAC,IAAI;YAC5B,OAAO;gBACL,eAAe,aAAa,SAAS;gBACrC,SAAS,aAAa,MAAM;gBAC5B,GAAG,YAAY,KAAK;YACtB;sBAEC;;;;;;IAGP;IAEA,iCAAiC;IACjC,MAAM,cAAc;IACpB,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,eAAe;YAAE;YAAS;YAAM;YAAW;QAAU;QAChE,UAAU;QACT,GAAG,WAAW;kBAEd;;;;;;AAGP;;AAGF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///home/navneet/Desktop/layout/src/components/layout/site-header.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Menu, X, Zap } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { SearchInput } from './SearchInput';\nimport { ThemeToggle } from './ThemeToggle';\n\nconst navigationLinks = [\n  { name: 'Home', href: '/' },\n  { name: 'About', href: '/about' },\n  { name: 'Services', href: '/services' },\n  { name: 'Blog', href: '/blog' },\n  { name: 'Contact', href: '/contact' },\n];\n\nexport function Navbar() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  return (\n    <nav className=\"sticky top-0 z-50 w-full border-b border-border/40 bg-background/80 backdrop-blur-xl supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo/Brand */}\n          <div className=\"flex items-center\">\n            <Link \n              href=\"/\" \n              className=\"flex items-center space-x-2 text-xl font-bold text-foreground hover:text-primary transition-colors duration-200\"\n            >\n              <div className=\"flex items-center justify-center w-8 h-8 bg-primary rounded-lg\">\n                <Zap className=\"w-5 h-5 text-primary-foreground\" />\n              </div>\n              <span className=\"hidden sm:block\">WebFlow</span>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navigationLinks.map((link) => (\n              <Link\n                key={link.name}\n                href={link.href}\n                className=\"text-sm font-medium text-muted-foreground hover:text-primary transition-colors duration-200 relative group\"\n              >\n                {link.name}\n                <span className=\"absolute -bottom-1 left-0 w-0 h-0.5 bg-primary transition-all duration-300 group-hover:w-full\"></span>\n              </Link>\n            ))}\n          </div>\n\n          {/* Right side - Search and Theme Toggle */}\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"hidden sm:block\">\n              <SearchInput />\n            </div>\n            <ThemeToggle />\n            \n            {/* Mobile menu button */}\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"md:hidden h-9 w-9\"\n              onClick={toggleMenu}\n            >\n              {isMenuOpen ? (\n                <X className=\"h-5 w-5\" />\n              ) : (\n                <Menu className=\"h-5 w-5\" />\n              )}\n              <span className=\"sr-only\">Toggle menu</span>\n            </Button>\n          </div>\n        </div>\n\n        {/* Mobile menu */}\n        <div className={`md:hidden transition-all duration-300 ease-in-out ${\n          isMenuOpen \n            ? 'max-h-96 opacity-100' \n            : 'max-h-0 opacity-0 overflow-hidden'\n        }`}>\n          <div className=\"py-4 space-y-4 border-t border-border/40\">\n            {/* Mobile Search */}\n            <div className=\"sm:hidden px-2\">\n              <SearchInput />\n            </div>\n            \n            {/* Mobile Navigation Links */}\n            <div className=\"space-y-2\">\n              {navigationLinks.map((link) => (\n                <Link\n                  key={link.name}\n                  href={link.href}\n                  className=\"block px-2 py-2 text-sm font-medium text-muted-foreground hover:text-primary hover:bg-accent/50 rounded-md transition-colors duration-200\"\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {link.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;AALA;;;;;;;AASA,MAAM,kBAAkB;IACtB;QAAE,MAAM;QAAQ,MAAM;IAAI;IAC1B;QAAE,MAAM;QAAS,MAAM;IAAS;IAChC;QAAE,MAAM;QAAY,MAAM;IAAY;IACtC;QAAE,MAAM;QAAQ,MAAM;IAAQ;IAC9B;QAAE,MAAM;QAAW,MAAM;IAAW;CACrC;AAEM,SAAS;;IACd,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,aAAa;QACjB,cAAc,CAAC;IACjB;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAU;;kDAEV,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,mMAAA,CAAA,MAAG;4CAAC,WAAU;;;;;;;;;;;kDAEjB,6LAAC;wCAAK,WAAU;kDAAkB;;;;;;;;;;;;;;;;;sCAKtC,6LAAC;4BAAI,WAAU;sCACZ,gBAAgB,GAAG,CAAC,CAAC,qBACpB,6LAAC,+JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAU;;wCAET,KAAK,IAAI;sDACV,6LAAC;4CAAK,WAAU;;;;;;;mCALX,KAAK,IAAI;;;;;;;;;;sCAWpB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;;;;;;;;;;8CAEH,6LAAC;;;;;8CAGD,6LAAC,qIAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,WAAU;oCACV,SAAS;;wCAER,2BACC,6LAAC,+LAAA,CAAA,IAAC;4CAAC,WAAU;;;;;iEAEb,6LAAC,qMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;sDAElB,6LAAC;4CAAK,WAAU;sDAAU;;;;;;;;;;;;;;;;;;;;;;;;8BAMhC,6LAAC;oBAAI,WAAW,CAAC,kDAAkD,EACjE,aACI,yBACA,qCACJ;8BACA,cAAA,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;;;;;;;;;;0CAIH,6LAAC;gCAAI,WAAU;0CACZ,gBAAgB,GAAG,CAAC,CAAC,qBACpB,6LAAC,+JAAA,CAAA,UAAI;wCAEH,MAAM,KAAK,IAAI;wCACf,WAAU;wCACV,SAAS,IAAM,cAAc;kDAE5B,KAAK,IAAI;uCALL,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAchC;GA5FgB;KAAA","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///home/navneet/Desktop/layout/src/components/layout/footer.tsx"],"sourcesContent":["'use client'\nexport default function Footer() {\n    return (\n      <footer className=\"w-full border-t border-dotted border-[hsl(var(--border))] py-4 text-sm text-muted-foreground\">\n        <div className=\"custom-container mx-auto px-4 flex flex-col md:flex-row items-center justify-between gap-2\">\n          <p className=\"text-center md:text-left\">\n            Built by <span className=\"font-medium text-foreground\">screen/ui</span>. The source code is available on{' '}\n            <a\n              href=\"https://github.com/iamnavneetrajput/screenui\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"underline hover:text-foreground inline-flex items-center gap-1\"\n            >\n              GitHub\n            </a>.\n          </p>\n        </div>\n      </footer>\n    );\n  }\n  "],"names":[],"mappings":";;;;AAAA;;AACe,SAAS;IACpB,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAE,WAAU;;oBAA2B;kCAC7B,6LAAC;wBAAK,WAAU;kCAA8B;;;;;;oBAAgB;oBAAkC;kCACzG,6LAAC;wBACC,MAAK;wBACL,QAAO;wBACP,KAAI;wBACJ,WAAU;kCACX;;;;;;oBAEG;;;;;;;;;;;;;;;;;AAKd;KAlBsB","debugId":null}}]
}